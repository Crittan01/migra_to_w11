---
# tasks file for roles/fase_2
- name: 1. Configurar WinRM con Task
  block:
    - name: 1.1 Crear directorio PS
      ansible.windows.win_file:
        path: "{{ fase_2_dir_whynotwin11 }}/PS"
        state: directory

    - name: 1.2 Validar existencia de Directorio PS
      ansible.windows.win_stat:
        path: "{{ fase_2_dir_whynotwin11 }}/PS"
      register: ps_dir_out

    - name: 1.3 Copiar PS a Directorio
      ansible.windows.win_copy:
        src: roles/fase_2/files/WinRM.ps1
        dest: "{{ fase_2_dir_whynotwin11 }}/PS/WinRM.ps1"
        remote_src: false
      when: ps_dir_out.stat.exists

- name: 2. Proceso de Registros W11 en Regedit
  block:
    - name: 2.1 Guardar estado actual de TargetReleaseVersion
      ansible.windows.win_shell: |
        $key = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate'
        $name = 'TargetReleaseVersion'
        if (Test-Path "$key\$name") {
          Get-ItemProperty -Path $key -Name $name | Select-Object -ExpandProperty $name
        }
      register: target_release_version

    - name: 2.2 Guardar estado actual de TargetReleaseVersionInfo
      ansible.windows.win_shell: |
        $key = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate'
        $name = 'TargetReleaseVersionInfo'
        if (Test-Path "$key\$name") {
          Get-ItemProperty -Path $key -Name $name | Select-Object -ExpandProperty $name
        }
      register: target_release_version_info

    - name: 2.3 Verificar si la clave ProductVersion existe
      ansible.windows.win_shell: |
        $key = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate'
        $name = 'ProductVersion'
        if (Test-Path "$key\$name") {
          Get-ItemProperty -Path $key -Name $name | Select-Object -ExpandProperty $name
        }
      register: product_version

    - name: 2.4 Configurar TargetProductVersion
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
        name: ProductVersion
        data: "Windows 11"
        type: string

    - name: 2.5 Configurar clave TargetReleaseVersionInfo para la versión de destino
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
        name: TargetReleaseVersionInfo
        data: "23H2"
        type: string

    - name: 2.6 Configurar clave TargetReleaseVersion para forzar la actualización a Windows 11
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
        name: TargetReleaseVersion
        data: 1
        type: dword

    - name: 2.7 Reiniciar el servidor
      ansible.windows.win_reboot:
        msg: "Reiniciando el servidor para aplicar cambios de registro"
        reboot_timeout: 600

- name: 3. Actualizar paquetes de Windows 11
  vars:
    ansible_ssh_args: -o ControlMaster=no -o ServerAliveInterval=30
  block:
    - name: 3.1 Hacer una pausa de 30 segundos
      ansible.builtin.pause:
        seconds: 30

    - name: 3.2 Buscar actualizaciones manualmente
      ansible.windows.win_updates:
        category_names: "*"
        state: searched
      register: search_results

    - name: 3.3 Descargar actualizaciones
      ansible.windows.win_updates:
        category_names: "*"
        state: downloaded
      register: download_results
      when: search_results.updates | length > 0

    - name: 3.4 Instalar actualizaciones
      ansible.windows.win_updates:
        category_names: "*"
        state: installed
      register: install_results
      when: download_results.updates | length > 0

    - name: Pausa
      ansible.builtin.pause:
        seconds: 30

    - name: 3.5 Reiniciar el servidor para completar la instalación de actualizaciones
      ansible.windows.win_reboot:
        msg: "El servidor se reiniciará para completar la instalación de actualizaciones"
        reboot_timeout: 3600  # Ajuste a 1 hora para manejar reinicios prolongados
      when: install_results.reboot_required

    - name: 3.4 Instalar todas las actualizaciones pendientes en Windows 11
      ansible.windows.win_updates:
        category_names: "*"
        reboot: true
      register: update11_results_all
      retries: 3
      delay: 120
      until: update11_results_all.failed_update_count == 0

    - name: 3.5 Reiniciar el servidor para completar la instalación de Windows 11
      ansible.windows.win_reboot:
        msg: "El servidor se reiniciará para completar la instalación de Windows 11"

    - name: 3.6 Recoger Facts Windows 11
      ansible.builtin.setup:
      register: facts_w11

    - name: 3.7 Datos de Sistema Operativo W11
      ansible.builtin.debug:
        msg:
          - "Nombre de PC: {{ facts_w11.ansible_facts.ansible_hostname }}"
          - "Version SO: {{ facts_w11.ansible_facts.ansible_distribution }}"
          - "Arquitectura: {{ facts_w11.ansible_facts.ansible_architecture }}"

    - name: 3.8 Generar reporte de Actualizacion
      ansible.builtin.copy:
        content: |
          Reporte de Actualizacion para: {{ facts_w11.ansible_facts.ansible_hostname }}
          -----------------------------------------------
          - Version SO: {{ facts_w11.ansible_facts.ansible_distribution }}
          - Architecture: {{ facts_w11.ansible_facts.ansible_architecture }}
        dest: roles/fase_2/files/{{ ansible_fqdn }}-upgrade_report.txt
        mode: "0644"

- name: 4. Restaurar o Eliminar Claves de Registro Según Corresponda
  block:
    - name: 4.1 Restaurar el valor original de ProductVersion
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
        name: ProductVersion
        data: "{{ product_version.stdout }}"
        type: string

      when: product_version.stdout is defined#
    - name: 4.2 Restaurar el valor original de TargetReleaseVersionInfo
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
        name: TargetReleaseVersionInfo
        data: "{{ target_release_version_info.stdout }}"
        type: string

      when: target_release_version_info.stdout is defined#
    - name: 4.3 Restaurar el valor original de TargetReleaseVersion
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
        name: TargetReleaseVersion
        data: "{{ target_release_version.stdout }}"
        type: dword

      when: target_release_version.stdout is defined#
    - name: 4.4 Eliminar la clave WindowsUpdate si no existía antes
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
        state: absent
      when: product_version.stdout is not defined and target_release_version_info.stdout is not defined and target_release_version.stdout is not defined
